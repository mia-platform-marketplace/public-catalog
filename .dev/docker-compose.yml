name: catalog-sync-dev

services:
  mongodb:
    image: mongo:8
    ports:
      - '27017:27017'
    volumes:
      - db-data:/data/db
    networks:
      - ring
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  crud-service:
    image: ghcr.io/mia-platform/crud-service:latest
    platform: linux/amd64
    ports:
      - '3000:3000'
    env_file:
      - ./crud-service/service.env
    volumes:
      - ./crud-service/collections:/home/node/app/collections
    networks:
      - ring
    depends_on:
      mongodb:
        condition: service_healthy

  files-service:
    image: nexus.mia-platform.eu/plugins/files-service:latest
    ports:
      - '3001:3000'
    env_file:
      - ./files-service/service.env
    volumes:
      - ./files-service/configs:/home/node/app/configs
    networks:
      - ring
    healthcheck:
      test: netstat -ltn | grep 3000 > /dev/null; if [ 0 != $? ]; then exit 1; fi;
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      crud-service:
        condition: service_started

  # Uncomment to start the sync job from the remote Docker image
  # software-catalog-sync:
  #   # image: miaplatform/software-catalog-sync
  #   image: nexus.mia-platform.eu/console/scripts/software-catalog-sync:latest
  #   environment:
  #     - LOG_LEVEL=info
  #     - MONGODB_URL=mongodb://mongodb:27017/catalog
  #     - FILES_SERVICE_URL=http://files-service:3000/
  #     - CATEGORIES_COLLECTION_NAME=categories
  #     - ITEMS_COLLECTION_NAME=items
  #     - FILES_COLLECTION_NAME=files
  #     - TENANT_ID_TO_SET=mia-platform
  #   networks:
  #     - ring
  #   depends_on:
  #     mongodb:
  #       condition: service_healthy
  #     crud-service:
  #       condition: service_started
  #     files-service:
  #       condition: service_healthy

volumes:
  db-data:
    name: catalog-sync-dev-db-data

networks:
  ring:

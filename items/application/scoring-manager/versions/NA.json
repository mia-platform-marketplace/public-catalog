{
  "$schema": "../../manifest.schema.json",
  "categoryId": "scoring",
  "description": "The application allows you to quickly set up multiple scoring processes",
  "documentation": {
    "type": "externalLink",
    "url": "https://docs.mia-platform.eu/docs/runtime_suite/scoring-manager/overview"
  },
  "image": {
    "localPath": "../assets/scoring-manager_logo_20250410.png"
  },
  "itemId": "scoring-manager",
  "name": "Scoring Manager",
  "repositoryUrl": "https://git.tools.mia-platform.eu/mia-fintech/marketplace/applications/scoring-manager",
  "resources": {
    "services": {
      "crud-service": {
        "description": "Use Mia-Platform core Crud Service to manage different instances of the service.",
        "dockerImage": "nexus.mia-platform.eu/core/crud-service:7.1.1",
        "defaultConfigMaps": [
          {
            "files": [],
            "link": {
              "targetSection": "collections"
            },
            "mountPath": "/home/node/app/collections",
            "name": "crud-service-collections",
            "viewAsReadOnly": true
          }
        ],
        "defaultDocumentationPath": "",
        "containerPorts": [
          {
            "name": "http",
            "from": 80,
            "to": 3000,
            "protocol": "TCP"
          }
        ],
        "defaultEnvironmentVariables": [
          {
            "name": "LOG_LEVEL",
            "value": "{{LOG_LEVEL}}",
            "valueType": "plain"
          },
          {
            "name": "HTTP_PORT",
            "value": "3000",
            "valueType": "plain"
          },
          {
            "name": "COLLECTION_DEFINITION_FOLDER",
            "value": "/home/node/app/collections",
            "valueType": "plain"
          },
          {
            "name": "USER_ID_HEADER_KEY",
            "value": "miauserid",
            "valueType": "plain"
          },
          {
            "name": "TRUSTED_PROXIES",
            "value": "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16",
            "valueType": "plain"
          },
          {
            "name": "CRUD_LIMIT_CONSTRAINT_ENABLED",
            "value": "{{CRUD_LIMIT_CONSTRAINT_ENABLED}}",
            "valueType": "plain"
          },
          {
            "name": "EXPOSE_METRICS",
            "value": "false",
            "valueType": "plain"
          },
          {
            "name": "SERVICE_PREFIX",
            "value": "/",
            "valueType": "plain"
          },
          {
            "name": "MONGODB_URL",
            "value": "{{MONGODB_URL}}",
            "valueType": "plain"
          }
        ],
        "defaultResources": {
          "cpuLimits": {
            "max": "200m",
            "min": "100m"
          },
          "memoryLimits": {
            "max": "250Mi",
            "min": "70Mi"
          }
        },
        "mapEnvVarToMountPath": {
          "collections": {
            "envName": "COLLECTION_DEFINITION_FOLDER",
            "type": "folder"
          }
        },
        "name": "crud-service",
        "type": "plugin",
        "componentId": "crud-service"
      },
      "flow-manager-main": {
        "defaultConfigMaps": [
          {
            "name": "flow-configuration-main",
            "mountPath": "/sagaConfiguration",
            "viewAsReadOnly": false,
            "files": [
              {
                "name": "rest.json",
                "content": "{\n  \"machineDefinition\": {\n    \"initialState\": \"PROCESS_CREATED\",\n    \"creationEvent\": \"processCreated\",\n    \"states\": [\n      {\n        \"id\": \"PROCESS_CREATED\",\n        \"description\": \"The new process was created\",\n        \"isFinal\": false,\n        \"businessStateId\": 0,\n        \"outgoingTransitions\": [\n          {\n            \"inputEvent\": \"subFlowCreated\",\n            \"targetState\": \"SCORING_PENDING\",\n            \"businessEventId\": 1\n          },\n          {\n            \"inputEvent\": \"expireProcess\",\n            \"targetState\": \"PROCESS_FAILED\",\n            \"businessEventId\": 1000\n          }\n        ]\n      },\n      {\n        \"id\": \"SCORING_PENDING\",\n        \"description\": \"The scoring process is not completed\",\n        \"isFinal\": false,\n        \"businessStateId\": 1,\n        \"outgoingTransitions\": [\n          {\n            \"inputEvent\": \"updateData\",\n            \"targetState\": \"SCORING_PENDING\",\n            \"businessEventId\": 1\n          },\n          {\n            \"inputEvent\": \"scoringCompleted\",\n            \"targetState\": \"APPROVAL_REQUESTED\",\n            \"businessEventId\": 2\n          },\n          {\n            \"inputEvent\": \"processError\",\n            \"targetState\": \"PROCESS_FAILED\",\n            \"businessEventId\": 1000\n          }\n        ]\n      },\n      {\n        \"id\": \"APPROVAL_REQUESTED\",\n        \"description\": \"The result of the scoring needs to approved\",\n        \"isFinal\": false,\n        \"businessStateId\": 2,\n        \"outputCommand\": {\n          \"channel\": \"requestApproval\",\n          \"label\": \"requestApproval\"\n        },\n        \"outgoingTransitions\": [\n          {\n            \"inputEvent\": \"processApproved\",\n            \"targetState\": \"PROCESS_COMPLETED\",\n            \"businessEventId\": 3\n          },\n          {\n            \"inputEvent\": \"processRejected\",\n            \"targetState\": \"PROCESS_REJECTED\",\n            \"businessEventId\": 1000\n          }\n        ]\n      },\n      {\n        \"id\": \"PROCESS_REJECTED\",\n        \"description\": \"The scoring result was not approved\",\n        \"isFinal\": true,\n        \"businessStateId\": 2,\n        \"outputCommand\": {\n          \"channel\": \"notify\",\n          \"label\": \"notify\"\n        },\n        \"outgoingTransitions\": []\n      },\n      {\n        \"id\": \"PROCESS_COMPLETED\",\n        \"description\": \"The process is closed\",\n        \"isFinal\": true,\n        \"businessStateId\": 3,\n        \"outputCommand\": {\n          \"channel\": \"notify\",\n          \"label\": \"notify\"\n        },\n        \"outgoingTransitions\": []\n      },\n      {\n        \"id\": \"PROCESS_FAILED\",\n        \"description\": \"An error occurs during the scoring process\",\n        \"isFinal\": true,\n        \"businessStateId\": 1000,\n        \"outputCommand\": {\n          \"channel\": \"notify\",\n          \"label\": \"notify\"\n        },\n        \"outgoingTransitions\": []\n      }\n    ],\n    \"businessStates\": [\n      {\n        \"id\": 0,\n        \"description\": \"PROCESS_CREATED\"\n      },\n      {\n        \"id\": 1,\n        \"description\": \"SCORING_PENDING\"\n      },\n      {\n        \"id\": 2,\n        \"description\": \"SCORING_COMPLETED\"\n      },\n      {\n        \"id\": 3,\n        \"description\": \"PROCESS_COMPLETED\"\n      },\n      {\n        \"id\": 3,\n        \"description\": \"PROCESS_REJECTED\"\n      },\n      {\n        \"id\": 1000,\n        \"description\": \"PROCESS_FAILED\"\n      }\n    ],\n    \"businessEvents\": [\n      {\n        \"id\": 0,\n        \"description\": \"processCreated\"\n      },\n      {\n        \"id\": 1,\n        \"description\": \"startScoring\"\n      },\n      {\n        \"id\": 2,\n        \"description\": \"scoringCompleted\"\n      },\n      {\n        \"id\": 3,\n        \"description\": \"processCompleted\"\n      },\n      {\n        \"id\": 4,\n        \"description\": \"processRejected\"\n      },\n      {\n        \"id\": 1000,\n        \"description\": \"processFailed\"\n      }\n    ]\n  },\n  \"communicationProtocols\": [\n    {\n      \"id\": \"notify\",\n      \"type\": \"rest\",\n      \"configurations\": {\n        \"protocol\": \"http\",\n        \"endpoint\": \"router-service\",\n        \"method\": \"POST\",\n        \"path\": \"/notify\"\n      }\n    },\n    {\n      \"id\": \"requestApproval\",\n      \"type\": \"rest\",\n      \"configurations\": {\n        \"protocol\": \"http\",\n        \"endpoint\": \"rules-service\",\n        \"method\": \"POST\",\n        \"path\": \"/saga/check\"\n      }\n    }\n  ],\n  \"persistencyManagement\": {\n    \"type\": \"crud\",\n    \"configurations\": {\n      \"collectionName\": \"main-process\"\n    }\n  }\n}"
              },
              {
                "name": "kafka.json",
                "content": "{\n  \"machineDefinition\": {\n    \"initialState\": \"PROCESS_CREATED\",\n    \"creationEvent\": \"processCreated\",\n    \"states\": [\n      {\n        \"id\": \"PROCESS_CREATED\",\n        \"description\": \"The new process was created\",\n        \"isFinal\": false,\n        \"businessStateId\": 0,\n        \"outgoingTransitions\": [\n          {\n            \"inputEvent\": \"subFlowCreated\",\n            \"targetState\": \"SCORING_PENDING\",\n            \"businessEventId\": 1\n          },\n          {\n            \"inputEvent\": \"expireProcess\",\n            \"targetState\": \"PROCESS_FAILED\",\n            \"businessEventId\": 1000\n          }\n        ]\n      },\n      {\n        \"id\": \"SCORING_PENDING\",\n        \"description\": \"The scoring process is not completed\",\n        \"isFinal\": false,\n        \"businessStateId\": 1,\n        \"outgoingTransitions\": [\n          {\n            \"inputEvent\": \"updateData\",\n            \"targetState\": \"SCORING_PENDING\",\n            \"businessEventId\": 1\n          },\n          {\n            \"inputEvent\": \"scoringCompleted\",\n            \"targetState\": \"APPROVAL_REQUESTED\",\n            \"businessEventId\": 2\n          },\n          {\n            \"inputEvent\": \"processError\",\n            \"targetState\": \"PROCESS_FAILED\",\n            \"businessEventId\": 1000\n          }\n        ]\n      },\n      {\n        \"id\": \"APPROVAL_REQUESTED\",\n        \"description\": \"The result of the scoring needs to approved\",\n        \"isFinal\": false,\n        \"businessStateId\": 2,\n        \"outputCommand\": {\n          \"channel\": \"requestApproval\",\n          \"label\": \"requestApproval\"\n        },\n        \"outgoingTransitions\": [\n          {\n            \"inputEvent\": \"processApproved\",\n            \"targetState\": \"PROCESS_COMPLETED\",\n            \"businessEventId\": 3\n          },\n          {\n            \"inputEvent\": \"processRejected\",\n            \"targetState\": \"PROCESS_REJECTED\",\n            \"businessEventId\": 1000\n          }\n        ]\n      },\n      {\n        \"id\": \"PROCESS_REJECTED\",\n        \"description\": \"The scoring result was not approved\",\n        \"isFinal\": true,\n        \"businessStateId\": 2,\n        \"outputCommand\": {\n          \"channel\": \"notify\",\n          \"label\": \"notify\"\n        },\n        \"outgoingTransitions\": []\n      },\n      {\n        \"id\": \"PROCESS_COMPLETED\",\n        \"description\": \"The process is closed\",\n        \"isFinal\": true,\n        \"businessStateId\": 3,\n        \"outputCommand\": {\n          \"channel\": \"notify\",\n          \"label\": \"notify\"\n        },\n        \"outgoingTransitions\": []\n      },\n      {\n        \"id\": \"PROCESS_FAILED\",\n        \"description\": \"An error occurs during the scoring process\",\n        \"isFinal\": true,\n        \"businessStateId\": 1000,\n        \"outputCommand\": {\n          \"channel\": \"notify\",\n          \"label\": \"notify\"\n        },\n        \"outgoingTransitions\": []\n      }\n    ],\n    \"businessStates\": [\n      {\n        \"id\": 0,\n        \"description\": \"PROCESS_CREATED\"\n      },\n      {\n        \"id\": 1,\n        \"description\": \"SCORING_PENDING\"\n      },\n      {\n        \"id\": 2,\n        \"description\": \"SCORING_COMPLETED\"\n      },\n      {\n        \"id\": 3,\n        \"description\": \"PROCESS_COMPLETED\"\n      },\n      {\n        \"id\": 3,\n        \"description\": \"PROCESS_REJECTED\"\n      },\n      {\n        \"id\": 1000,\n        \"description\": \"PROCESS_FAILED\"\n      }\n    ],\n    \"businessEvents\": [\n      {\n        \"id\": 0,\n        \"description\": \"processCreated\"\n      },\n      {\n        \"id\": 1,\n        \"description\": \"startScoring\"\n      },\n      {\n        \"id\": 2,\n        \"description\": \"scoringCompleted\"\n      },\n      {\n        \"id\": 3,\n        \"description\": \"processCompleted\"\n      },\n      {\n        \"id\": 4,\n        \"description\": \"processRejected\"\n      },\n      {\n        \"id\": 1000,\n        \"description\": \"processFailed\"\n      }\n    ]\n  },\n  \"communicationProtocols\": [\n    {\n      \"id\": \"notify\",\n      \"type\": \"rest\",\n      \"configurations\": {\n        \"protocol\": \"http\",\n        \"endpoint\": \"router-service\",\n        \"method\": \"POST\",\n        \"path\": \"/notify\"\n      }\n    },\n    {\n      \"id\": \"requestApproval\",\n      \"type\": \"kafka\",\n      \"configurations\": {\n        \"brokers\": [\n          \"CHANGE ME\"\n        ],\n        \"inputTopics\": [\n          \"main-flow\"\n        ],\n        \"outputTopics\": [\n          \"request-approval\"\n        ],\n        \"consumerGroup\": \"main-flow-manager\",\n        \"authenticationProperties\": {\n          \"ssl\": true,\n          \"sasl\": {\n            \"mechanism\": \"PLAIN\",\n            \"username\": \"CHANGE ME\",\n            \"password\": \"CHANGE ME\"\n          }\n        }\n      }\n    }\n  ],\n  \"persistencyManagement\": {\n    \"type\": \"crud\",\n    \"configurations\": {\n      \"collectionName\": \"main-process\"\n    }\n  }\n}"
              }
            ]
          }
        ],
        "defaultDocumentationPath": "/documentation/json",
        "defaultEnvironmentVariables": [
          {
            "name": "LOG_LEVEL",
            "value": "{{LOG_LEVEL}}",
            "valueType": "plain"
          },
          {
            "name": "HTTP_PORT",
            "value": "3000",
            "valueType": "plain"
          },
          {
            "name": "USERID_HEADER_KEY",
            "value": "miauserid",
            "valueType": "plain"
          },
          {
            "name": "GROUPS_HEADER_KEY",
            "value": "miausergroups",
            "valueType": "plain"
          },
          {
            "name": "CLIENTTYPE_HEADER_KEY",
            "value": "miaclienttype",
            "valueType": "plain"
          },
          {
            "name": "BACKOFFICE_HEADER_KEY",
            "value": "isbackoffice",
            "valueType": "plain"
          },
          {
            "name": "USER_PROPERTIES_HEADER_KEY",
            "value": "miauserproperties",
            "valueType": "plain"
          },
          {
            "name": "MICROSERVICE_GATEWAY_SERVICE_NAME",
            "value": "microservice-gateway",
            "valueType": "plain"
          },
          {
            "name": "CONFIGURATIONS_FILE_PATH",
            "value": "{{FLOW_MANAGER_CONFIG_PATH}}",
            "valueType": "plain"
          },
          {
            "name": "SAGA_ID_PREFIX",
            "value": "main",
            "valueType": "plain"
          }
        ],
        "defaultResources": {
          "cpuLimits": {
            "max": "100m",
            "min": "10m"
          },
          "memoryLimits": {
            "max": "150Mi",
            "min": "100Mi"
          }
        },
        "tags": [
          "main"
        ],
        "description": "The Main Flow Manager of the Application",
        "dockerImage": "nexus.mia-platform.eu/core/flow-manager:{{FLOW_MANAGER_VERSION}}",
        "name": "flow-manager-main",
        "type": "plugin",
        "componentId": "flow-manager",
        "defaultProbes": {
          "liveness": {
            "path": "/-/healthz",
            "initialDelaySeconds": 15,
            "periodSeconds": 20,
            "timeoutSeconds": 1,
            "failureThreshold": 3
          },
          "readiness": {
            "path": "/-/ready",
            "initialDelaySeconds": 5,
            "periodSeconds": 10,
            "timeoutSeconds": 1,
            "successThreshold": 1,
            "failureThreshold": 3
          }
        },
        "containerPorts": [
          {
            "name": "http",
            "from": 80,
            "to": 3000,
            "protocol": "TCP"
          }
        ]
      },
      "flow-manager-subflow": {
        "defaultConfigMaps": [
          {
            "name": "flow-configuration-sub-flow",
            "mountPath": "/sagaConfiguration",
            "viewAsReadOnly": false,
            "files": [
              {
                "name": "rest.json",
                "content": "{\n  \"machineDefinition\": {\n    \"initialState\": \"PROCESS_CREATED\",\n    \"creationEvent\": \"processCreated\",\n    \"states\": [\n      {\n        \"id\": \"PROCESS_CREATED\",\n        \"description\": \"Process ready and created on CRUD\",\n        \"isFinal\": false,\n        \"businessStateId\": 0,\n        \"outgoingTransitions\": [\n          {\n            \"inputEvent\": \"actionRequested\",\n            \"targetState\": \"ACTION_REQUESTED\",\n            \"businessEventId\": 1\n          },\n          {\n            \"inputEvent\": \"expireProcess\",\n            \"targetState\": \"PROCESS_EXPIRED\",\n            \"businessEventId\": 1000\n          }\n        ]\n      },\n      {\n        \"id\": \"ACTION_REQUESTED\",\n        \"description\": \"Request to service\",\n        \"isFinal\": false,\n        \"businessStateId\": 0,\n        \"outputCommand\": {\n          \"channel\": \"action\",\n          \"label\": \"action\"\n        },\n        \"outgoingTransitions\": [\n          {\n            \"inputEvent\": \"actionCompleted\",\n            \"targetState\": \"PROCESS_COMPLETED\",\n            \"businessEventId\": 2\n          },\n          {\n            \"inputEvent\": \"processFailed\",\n            \"targetState\": \"PROCESS_FAILED\",\n            \"businessEventId\": 1001\n          },\n          {\n            \"inputEvent\": \"expireProcess\",\n            \"targetState\": \"PROCESS_EXPIRED\",\n            \"businessEventId\": 1000\n          }\n        ]\n      },\n      {\n        \"id\": \"PROCESS_COMPLETED\",\n        \"outputCommand\": {\n          \"channel\": \"notify\",\n          \"label\": \"processCompleted\"\n        },\n        \"description\": \"The process has been completed\",\n        \"isFinal\": true,\n        \"businessStateId\": 1,\n        \"outgoingTransitions\": []\n      },\n      {\n        \"id\": \"PROCESS_FAILED\",\n        \"outputCommand\": {\n          \"channel\": \"notify\",\n          \"label\": \"processError\"\n        },\n        \"description\": \"The process has failed\",\n        \"isFinal\": true,\n        \"businessStateId\": 1001,\n        \"outgoingTransitions\": []\n      },\n      {\n        \"id\": \"PROCESS_EXPIRED\",\n        \"description\": \"The process expired\",\n        \"isFinal\": true,\n        \"businessStateId\": 1001,\n        \"outputCommand\": {\n          \"channel\": \"notify\",\n          \"label\": \"notify\"\n        },\n        \"outgoingTransitions\": []\n      }\n    ],\n    \"businessStates\": [\n      {\n        \"id\": 0,\n        \"description\": \"PROCESS_CREATED\"\n      },\n      {\n        \"id\": 1,\n        \"description\": \"PROCESS_COMPLETED\"\n      },\n      {\n        \"id\": 1001,\n        \"description\": \"PROCESS_FAILED\"\n      }\n    ],\n    \"businessEvents\": [\n      {\n        \"id\": 0,\n        \"description\": \"subProcessCreated\"\n      },\n      {\n        \"id\": 1,\n        \"description\": \"actionEvent\"\n      },\n      {\n        \"id\": 2,\n        \"description\": \"nextEvent\"\n      },\n      {\n        \"id\": 3,\n        \"description\": \"processCompleted\"\n      },\n      {\n        \"id\": 1001,\n        \"description\": \"processError\"\n      },\n      {\n        \"id\": 1000,\n        \"description\": \"processExpired\"\n      }\n    ]\n  },\n  \"communicationProtocols\": [\n    {\n      \"id\": \"notify\",\n      \"type\": \"rest\",\n      \"configurations\": {\n        \"protocol\": \"http\",\n        \"endpoint\": \"idm-router-service\",\n        \"method\": \"POST\",\n        \"path\": \"/notify\"\n      }\n    },\n    {\n      \"id\": \"action\",\n      \"type\": \"rest\",\n      \"configurations\": {\n        \"protocol\": \"http\",\n        \"endpoint\": \"external-service\",\n        \"method\": \"POST\",\n        \"path\": \"/action\"\n      }\n    }\n  ],\n  \"persistencyManagement\": {\n    \"type\": \"crud\",\n    \"configurations\": {\n      \"collectionName\": \"sub-process\"\n    }\n  }\n}"
              },
              {
                "name": "kafka.json",
                "content": "{\n  \"machineDefinition\": {\n    \"initialState\": \"PROCESS_CREATED\",\n    \"creationEvent\": \"processCreated\",\n    \"states\": [\n      {\n        \"id\": \"PROCESS_CREATED\",\n        \"description\": \"Process ready and created on CRUD\",\n        \"isFinal\": false,\n        \"businessStateId\": 0,\n        \"outgoingTransitions\": [\n          {\n            \"inputEvent\": \"actionRequested\",\n            \"targetState\": \"ACTION_REQUESTED\",\n            \"businessEventId\": 1\n          },\n          {\n            \"inputEvent\": \"expireProcess\",\n            \"targetState\": \"PROCESS_EXPIRED\",\n            \"businessEventId\": 1000\n          }\n        ]\n      },\n      {\n        \"id\": \"ACTION_REQUESTED\",\n        \"description\": \"Request to service\",\n        \"isFinal\": false,\n        \"businessStateId\": 0,\n        \"outputCommand\": {\n          \"channel\": \"action\",\n          \"label\": \"action\"\n        },\n        \"outgoingTransitions\": [\n          {\n            \"inputEvent\": \"actionCompleted\",\n            \"targetState\": \"PROCESS_COMPLETED\",\n            \"businessEventId\": 2\n          },\n          {\n            \"inputEvent\": \"processFailed\",\n            \"targetState\": \"PROCESS_FAILED\",\n            \"businessEventId\": 1001\n          },\n          {\n            \"inputEvent\": \"expireProcess\",\n            \"targetState\": \"PROCESS_EXPIRED\",\n            \"businessEventId\": 1000\n          }\n        ]\n      },\n      {\n        \"id\": \"PROCESS_COMPLETED\",\n        \"outputCommand\": {\n          \"channel\": \"notify\",\n          \"label\": \"processCompleted\"\n        },\n        \"description\": \"The process has been completed\",\n        \"isFinal\": true,\n        \"businessStateId\": 1,\n        \"outgoingTransitions\": []\n      },\n      {\n        \"id\": \"PROCESS_FAILED\",\n        \"outputCommand\": {\n          \"channel\": \"notify\",\n          \"label\": \"processError\"\n        },\n        \"description\": \"The process has failed\",\n        \"isFinal\": true,\n        \"businessStateId\": 1001,\n        \"outgoingTransitions\": []\n      },\n      {\n        \"id\": \"PROCESS_EXPIRED\",\n        \"description\": \"The process expired\",\n        \"isFinal\": true,\n        \"businessStateId\": 1001,\n        \"outputCommand\": {\n          \"channel\": \"notify\",\n          \"label\": \"notify\"\n        },\n        \"outgoingTransitions\": []\n      }\n    ],\n    \"businessStates\": [\n      {\n        \"id\": 0,\n        \"description\": \"PROCESS_CREATED\"\n      },\n      {\n        \"id\": 1,\n        \"description\": \"PROCESS_COMPLETED\"\n      },\n      {\n        \"id\": 1001,\n        \"description\": \"PROCESS_FAILED\"\n      }\n    ],\n    \"businessEvents\": [\n      {\n        \"id\": 0,\n        \"description\": \"subProcessCreated\"\n      },\n      {\n        \"id\": 1,\n        \"description\": \"actionEvent\"\n      },\n      {\n        \"id\": 2,\n        \"description\": \"nextEvent\"\n      },\n      {\n        \"id\": 3,\n        \"description\": \"processCompleted\"\n      },\n      {\n        \"id\": 1001,\n        \"description\": \"processError\"\n      },\n      {\n        \"id\": 1000,\n        \"description\": \"processExpired\"\n      }\n    ]\n  },\n  \"communicationProtocols\": [\n    {\n      \"id\": \"notify\",\n      \"type\": \"rest\",\n      \"configurations\": {\n        \"protocol\": \"http\",\n        \"endpoint\": \"idm-router-service\",\n        \"method\": \"POST\",\n        \"path\": \"/notify\"\n      }\n    },\n    {\n      \"id\": \"action\",\n      \"type\": \"kafka\",\n      \"configurations\": {\n        \"brokers\": [\n          \"CHANGE ME\"\n        ],\n        \"inputTopics\": [\n          \"main-flow\"\n        ],\n        \"outputTopics\": [\n          \"action\"\n        ],\n        \"consumerGroup\": \"main-flow-manager\",\n        \"authenticationProperties\": {\n          \"ssl\": true,\n          \"sasl\": {\n            \"mechanism\": \"PLAIN\",\n            \"username\": \"CHANGE ME\",\n            \"password\": \"CHANGE ME\"\n          }\n        }\n      }\n    }\n  ],\n  \"persistencyManagement\": {\n    \"type\": \"crud\",\n    \"configurations\": {\n      \"collectionName\": \"sub-process\"\n    }\n  }\n}"
              }
            ]
          }
        ],
        "defaultDocumentationPath": "/documentation/json",
        "defaultEnvironmentVariables": [
          {
            "name": "LOG_LEVEL",
            "value": "{{LOG_LEVEL}}",
            "valueType": "plain"
          },
          {
            "name": "HTTP_PORT",
            "value": "3000",
            "valueType": "plain"
          },
          {
            "name": "USERID_HEADER_KEY",
            "value": "miauserid",
            "valueType": "plain"
          },
          {
            "name": "GROUPS_HEADER_KEY",
            "value": "miausergroups",
            "valueType": "plain"
          },
          {
            "name": "CLIENTTYPE_HEADER_KEY",
            "value": "miaclienttype",
            "valueType": "plain"
          },
          {
            "name": "BACKOFFICE_HEADER_KEY",
            "value": "isbackoffice",
            "valueType": "plain"
          },
          {
            "name": "USER_PROPERTIES_HEADER_KEY",
            "value": "miauserproperties",
            "valueType": "plain"
          },
          {
            "name": "MICROSERVICE_GATEWAY_SERVICE_NAME",
            "value": "microservice-gateway",
            "valueType": "plain"
          },
          {
            "name": "CONFIGURATIONS_FILE_PATH",
            "value": "{{FLOW_MANAGER_CONFIG_PATH}}",
            "valueType": "plain"
          },
          {
            "name": "SAGA_ID_PREFIX",
            "value": "subflow",
            "valueType": "plain"
          }
        ],
        "defaultResources": {
          "cpuLimits": {
            "max": "100m",
            "min": "10m"
          },
          "memoryLimits": {
            "max": "150Mi",
            "min": "100Mi"
          }
        },
        "description": "The Flow Manager Sub Flow",
        "dockerImage": "nexus.mia-platform.eu/core/flow-manager:{{FLOW_MANAGER_VERSION}}",
        "name": "flow-manager-subflow",
        "type": "plugin",
        "componentId": "flow-manager",
        "defaultProbes": {
          "liveness": {
            "path": "/-/healthz",
            "initialDelaySeconds": 15,
            "periodSeconds": 20,
            "timeoutSeconds": 1,
            "failureThreshold": 3
          },
          "readiness": {
            "path": "/-/ready",
            "initialDelaySeconds": 5,
            "periodSeconds": 10,
            "timeoutSeconds": 1,
            "successThreshold": 1,
            "failureThreshold": 3
          }
        },
        "containerPorts": [
          {
            "name": "http",
            "from": 80,
            "to": 3000,
            "protocol": "TCP"
          }
        ]
      },
      "flow-manager-router": {
        "defaultConfigMaps": [
          {
            "name": "flow-manager-router",
            "mountPath": "/config",
            "viewAsReadOnly": false,
            "files": [
              {
                "name": "rules.json",
                "content": "[\n   {\n     \"id\": \"default\",\n     \"info\": {\n       \"flowManagerUrl\": \"http://flow-manager-subflow/\", \n      \"crudServiceUrl\": \"http://crud-service/subflow-process/\" \n    },\n     \"rules\": {}\n   }\n]\n"
              }
            ]
          }
        ],
        "defaultEnvironmentVariables": [
          {
            "name": "HTTP_PORT",
            "value": "8080",
            "valueType": "plain"
          },
          {
            "name": "LOG_LEVEL",
            "value": "{{LOG_LEVEL}}",
            "valueType": "plain"
          },
          {
            "name": "HTTP_LOG_LEVEL",
            "value": "NONE",
            "valueType": "plain"
          },
          {
            "name": "MAIN_FLOW_MANAGER_URL",
            "value": "http://flow-manager-main/",
            "valueType": "plain"
          },
          {
            "name": "MAIN_SAGA_CRUD_URL",
            "value": "http://crud-service/main-process/",
            "valueType": "plain"
          },
          {
            "name": "SUB_FLOW_CONFIGURATION_FILE_PATH",
            "value": "/config/rules.json",
            "valueType": "plain"
          },
          {
            "name": "MODE",
            "value": "{{COMMUNICATION_MODE}}",
            "valueType": "plain"
          },
          {
            "name": "KAFKA_CONFIGURATION_FILE_PATH",
            "value": "/path/to/file",
            "valueType": "plain"
          },
          {
            "name": "MAIN_FLOW_ID_KEY",
            "value": "mainFlowId",
            "valueType": "plain"
          },
          {
            "name": "MAIN_FLOW_DATA_KEY",
            "value": "mainFlowData",
            "valueType": "plain"
          },
          {
            "name": "SUB_FLOW_ID_KEY",
            "value": "subFlowId",
            "valueType": "plain"
          },
          {
            "name": "SUB_FLOW_CREATED_EVENT",
            "value": "subFlowCreated",
            "valueType": "plain"
          },
          {
            "name": "ARRAY_MERGE_MODE",
            "value": "SHA",
            "valueType": "plain"
          },
          {
            "name": "EXTERNAL_SERVICE_URL",
            "value": "",
            "valueType": "plain"
          }
        ],
        "defaultResources": {
          "cpuLimits": {
            "max": "250m",
            "min": "25m"
          },
          "memoryLimits": {
            "max": "300Mi",
            "min": "200Mi"
          }
        },
        "description": "This service provides communication among flow managers of your project",
        "dockerImage": "nexus.mia-platform.eu/plugins/flow-manager-router:{{ROUTER_VERSION}}",
        "name": "flow-manager-router",
        "type": "plugin",
        "defaultProbes": {
          "liveness": {
            "path": "/-/healthz",
            "initialDelaySeconds": 15,
            "periodSeconds": 20,
            "timeoutSeconds": 1,
            "failureThreshold": 3
          },
          "readiness": {
            "path": "/-/ready",
            "initialDelaySeconds": 5,
            "periodSeconds": 10,
            "timeoutSeconds": 1,
            "successThreshold": 1,
            "failureThreshold": 3
          }
        },
        "containerPorts": [
          {
            "name": "http",
            "from": 80,
            "to": 8080,
            "protocol": "TCP"
          }
        ]
      },
      "adaptive-approval": {
        "defaultConfigMaps": [],
        "defaultEnvironmentVariables": [
          {
            "name": "HTTP_PORT",
            "value": "8080",
            "valueType": "plain"
          },
          {
            "name": "CRUD_URL",
            "value": "http://crud-service/rules",
            "valueType": "plain"
          },
          {
            "name": "FLOW_MANAGER_URL",
            "value": "http://flow-manager-main/",
            "valueType": "plain"
          }
        ],
        "defaultResources": {
          "cpuLimits": {
            "max": "100m",
            "min": "20m"
          },
          "memoryLimits": {
            "max": "150Mi",
            "min": "20Mi"
          }
        },
        "description": "This service allow to define and verify rules",
        "dockerImage": "nexus.mia-platform.eu/fintech/adaptive-approval:{{ADAPTIVE_APPROVAL_VERSION}}",
        "name": "adaptive-approval",
        "type": "plugin",
        "defaultProbes": {
          "liveness": {
            "path": "/-/healthz",
            "initialDelaySeconds": 15,
            "periodSeconds": 20,
            "timeoutSeconds": 1,
            "failureThreshold": 3
          },
          "readiness": {
            "path": "/-/ready",
            "initialDelaySeconds": 5,
            "periodSeconds": 10,
            "timeoutSeconds": 1,
            "successThreshold": 1,
            "failureThreshold": 3
          }
        },
        "containerPorts": [
          {
            "name": "http",
            "from": 80,
            "to": 8080,
            "protocol": "TCP"
          }
        ]
      }
    },
    "endpoints": {},
    "collections": {
      "main_process": {
        "id": "main_process",
        "description": "This collection contains main process data and the data collected from different processes",
        "defaultName": "main_process",
        "type": "collection",
        "tags": [
          "collection"
        ],
        "fields": [
          {
            "name": "_id",
            "description": "_id",
            "type": "ObjectId",
            "required": true,
            "nullable": false
          },
          {
            "name": "creatorId",
            "description": "creatorId",
            "type": "string",
            "required": true,
            "nullable": false
          },
          {
            "name": "createdAt",
            "description": "createdAt",
            "type": "Date",
            "required": true,
            "nullable": false
          },
          {
            "name": "updaterId",
            "description": "updaterId",
            "type": "string",
            "required": true,
            "nullable": false
          },
          {
            "name": "updatedAt",
            "description": "updatedAt",
            "type": "Date",
            "required": true,
            "nullable": false
          },
          {
            "name": "__STATE__",
            "description": "__STATE__",
            "type": "string",
            "required": true,
            "nullable": false
          },
          {
            "name": "sagaId",
            "description": "",
            "type": "string",
            "required": true,
            "nullable": false
          },
          {
            "name": "metadata",
            "description": "",
            "type": "RawObject",
            "required": true,
            "nullable": false
          },
          {
            "name": "isFinal",
            "description": "",
            "type": "boolean",
            "required": true,
            "nullable": false
          },
          {
            "name": "currentState",
            "description": "",
            "type": "string",
            "required": true,
            "nullable": false
          },
          {
            "name": "latestEvent",
            "description": "",
            "type": "RawObject",
            "required": true,
            "nullable": false
          },
          {
            "name": "associatedEntityId",
            "description": "",
            "type": "string",
            "required": true,
            "nullable": false
          },
          {
            "name": "events",
            "description": "",
            "type": "Array_string",
            "required": false,
            "nullable": false
          },
          {
            "name": "history",
            "description": "",
            "type": "RawObject",
            "required": false,
            "nullable": false
          },
          {
            "name": "businessStateId",
            "description": "",
            "type": "string",
            "required": true,
            "nullable": false
          },
          {
            "name": "businessStateDescription",
            "description": "",
            "type": "string",
            "required": false,
            "nullable": false
          }
        ],
        "internalEndpoints": [
          {
            "basePath": "/main-process",
            "defaultState": "PUBLIC"
          }
        ]
      },
      "subflow_process": {
        "id": "subflow_process",
        "description": "This collection contains process data",
        "defaultName": "subflow_process",
        "type": "collection",
        "tags": [
          "collection"
        ],
        "fields": [
          {
            "name": "_id",
            "description": "_id",
            "type": "ObjectId",
            "required": true,
            "nullable": false
          },
          {
            "name": "creatorId",
            "description": "creatorId",
            "type": "string",
            "required": true,
            "nullable": false
          },
          {
            "name": "createdAt",
            "description": "createdAt",
            "type": "Date",
            "required": true,
            "nullable": false
          },
          {
            "name": "updaterId",
            "description": "updaterId",
            "type": "string",
            "required": true,
            "nullable": false
          },
          {
            "name": "updatedAt",
            "description": "updatedAt",
            "type": "Date",
            "required": true,
            "nullable": false
          },
          {
            "name": "__STATE__",
            "description": "__STATE__",
            "type": "string",
            "required": true,
            "nullable": false
          },
          {
            "name": "sagaId",
            "description": "",
            "type": "string",
            "required": true,
            "nullable": false
          },
          {
            "name": "metadata",
            "description": "",
            "type": "RawObject",
            "required": true,
            "nullable": false
          },
          {
            "name": "isFinal",
            "description": "",
            "type": "boolean",
            "required": true,
            "nullable": false
          },
          {
            "name": "currentState",
            "description": "",
            "type": "string",
            "required": true,
            "nullable": false
          },
          {
            "name": "latestEvent",
            "description": "",
            "type": "RawObject",
            "required": true,
            "nullable": false
          },
          {
            "name": "associatedEntityId",
            "description": "",
            "type": "string",
            "required": true,
            "nullable": false
          },
          {
            "name": "events",
            "description": "",
            "type": "Array_string",
            "required": false,
            "nullable": false
          },
          {
            "name": "history",
            "description": "",
            "type": "RawObject",
            "required": false,
            "nullable": false
          },
          {
            "name": "businessStateId",
            "description": "",
            "type": "string",
            "required": true,
            "nullable": false
          },
          {
            "name": "businessStateDescription",
            "description": "",
            "type": "string",
            "required": false,
            "nullable": false
          }
        ],
        "internalEndpoints": [
          {
            "basePath": "/subflow-process",
            "defaultState": "PUBLIC"
          }
        ]
      },
      "tenants": {
        "id": "tenants",
        "description": "Tenants data",
        "defaultName": "tenants",
        "type": "collection",
        "tags": [
          "collection"
        ],
        "fields": [
          {
            "name": "_id",
            "description": "_id",
            "type": "ObjectId",
            "required": true,
            "nullable": false
          },
          {
            "name": "creatorId",
            "description": "creatorId",
            "type": "string",
            "required": true,
            "nullable": false
          },
          {
            "name": "createdAt",
            "description": "createdAt",
            "type": "Date",
            "required": true,
            "nullable": false
          },
          {
            "name": "updaterId",
            "description": "updaterId",
            "type": "string",
            "required": true,
            "nullable": false
          },
          {
            "name": "updatedAt",
            "description": "updatedAt",
            "type": "Date",
            "required": true,
            "nullable": false
          },
          {
            "name": "__STATE__",
            "description": "__STATE__",
            "type": "string",
            "required": true,
            "nullable": false
          },
          {
            "name": "tenant-id",
            "type": "string",
            "required": false,
            "nullable": false,
            "sensitivityValue": 0,
            "encryptionEnabled": false,
            "encryptionSearchable": false
          }
        ],
        "internalEndpoints": [
          {
            "basePath": "/tenants",
            "defaultState": "PUBLIC"
          }
        ]
      },
      "rules": {
        "id": "rules",
        "description": "Adaptive approval rules",
        "defaultName": "rules",
        "type": "collection",
        "tags": [
          "collection"
        ],
        "fields": [
          {
            "name": "_id",
            "description": "_id",
            "type": "ObjectId",
            "required": true,
            "nullable": false
          },
          {
            "name": "creatorId",
            "description": "creatorId",
            "type": "string",
            "required": true,
            "nullable": false
          },
          {
            "name": "createdAt",
            "description": "createdAt",
            "type": "Date",
            "required": true,
            "nullable": false
          },
          {
            "name": "updaterId",
            "description": "updaterId",
            "type": "string",
            "required": true,
            "nullable": false
          },
          {
            "name": "updatedAt",
            "description": "updatedAt",
            "type": "Date",
            "required": true,
            "nullable": false
          },
          {
            "name": "__STATE__",
            "description": "__STATE__",
            "type": "string",
            "required": true,
            "nullable": false
          },
          {
            "name": "priority",
            "type": "number",
            "required": false,
            "nullable": false,
            "sensitivityValue": 0,
            "encryptionEnabled": false,
            "encryptionSearchable": false
          },
          {
            "name": "ruleId",
            "type": "string",
            "required": false,
            "nullable": false,
            "sensitivityValue": 0,
            "encryptionEnabled": false,
            "encryptionSearchable": false
          },
          {
            "name": "type",
            "type": "string",
            "required": false,
            "nullable": false,
            "sensitivityValue": 0,
            "encryptionEnabled": false,
            "encryptionSearchable": false
          },
          {
            "name": "rules",
            "type": "Array_RawObject",
            "required": false,
            "nullable": false,
            "sensitivityValue": 0,
            "encryptionEnabled": false,
            "encryptionSearchable": false
          },
          {
            "name": "response",
            "type": "RawObject",
            "required": false,
            "nullable": false,
            "sensitivityValue": 0,
            "encryptionEnabled": false,
            "encryptionSearchable": false
          }
        ],
        "internalEndpoints": [
          {
            "basePath": "/rules",
            "defaultState": "PUBLIC"
          }
        ]
      }
    },
    "unsecretedVariables": {
      "ROUTER_VERSION": {
        "productionEnv": "1.0.0",
        "noProductionEnv": "1.0.0"
      },
      "ADAPTIVE_APPROVAL_VERSION": {
        "productionEnv": "0.0.1",
        "noProductionEnv": "0.0.1"
      },
      "FLOW_MANAGER_VERSION": {
        "productionEnv": "2.6.4",
        "noProductionEnv": "2.6.4"
      },
      "COMMUNICATION_MODE": {
        "productionEnv": "KAFKA",
        "noProductionEnv": "REST"
      },
      "FLOW_MANAGER_CONFIG_PATH": {
        "productionEnv": "/sagaConfiguration/kafka.json",
        "noProductionEnv": "/sagaConfiguration/rest.json"
      }
    }
  },
  "supportedBy": "Mia-FinTech",
  "supportedByImage": {
    "localPath": "../../../../assets/img/MIA-FinTech.png"
  },
  "tenantId": "mia-platform",
  "visibility": {
    "public": true
  },
  "releaseDate": "2023-09-29T10:24:15.261Z",
  "lifecycleStatus": "published",
  "itemTypeDefinitionRef": {
    "name": "application",
    "namespace": "mia-platform"
  }
}
